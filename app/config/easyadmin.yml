easy_admin:
    site_name: 'DisMoi'
    design:
        form_theme:
            - horizontal
        assets:
            css:
                - 'css/admin.css'
            js:
                - 'js/regex_validator.js'
                - 'js/chartjs/moment.min.js'
                - 'js/chartjs/Chart.js'
                - 'js/custom_graph.js'
                - 'js/short-and-sweet/short-and-sweet.js'
                - 'js/message_validator.js'
                - 'js/filter_table_row.js'
                - 'js/select2.js'
    entities:
        Notice:
            class: AppBundle\Entity\Notice
            label: menu.notices
            search:
                fields:
                    - id
                    - matchingContexts.description
                    - matchingContexts.exampleUrl
                    - matchingContexts.urlRegex
                    - matchingContexts.excludeUrlRegex
                    - contributor.name
                    - message
                    - note
                    - expires
            show:
                fields:
                    - { property: message, label: notices.message }
                    - { property: contributor, label: notices.contributor }
                    - { property: note, label: notices.note }
                    - { property: visibility, label: notices.visibility }
                    - { property: matchingContexts, label: notices.matchingContexts }
                    - { property: expires, label: notices.expires }
                    - { property: unpublishedOnExpiration, label: notices.unpublishedOnExpiration }
            form:
                fields:
                    - { type: group, label: notices.groups.publication, icon: comments }
                    - { property: message, label: notices.message }
                    - { property: contributor, label: notices.contributor, type_options: { 'query_builder': 'AppBundle\Repository\ContributorRepository::getOrderedList' }}
                    - { property: note, label: notices.note }
                    - { property: visibility, label: notices.visibility, type: 'AppBundle\Form\VisibilityType' }
                    - { type: group, label: notices.groups.matchingContexts, icon: 'paper-plane', columns: 6 }
                    - {
                        property: matchingContexts,
                        type: collection,
                        label: notices.matchingContexts,
                        type_options: {
                            required: true,
                            entry_type: 'AppBundle\Form\MatchingContextType',
                            allow_add: true,
                            allow_delete: true,
                            by_reference: false
                        }
                      }
                    - { type: group, label: Cycle de vie, icon: recycle, columns: 6 }
                    - { property: expires, label: notices.expires }
                    - { property: unpublishedOnExpiration, label: notices.unpublishedOnExpiration }

            list:
                title: title.notices
                fields:
                    - { property: id, label: notices.id }
                    - { property: contributor, label: notices.contributor }
                    - { property: message, label: notices.message }
                    - { property: visibility, label: notices.visibility }
                    - { property: matchingContexts, label: notices.matchingContexts }
                    - { property : badgedRatingCount, label: notices.badgedRatingCount, css_class: 'graphable' }
                    - { property : displayedRatingCount, label: notices.displayedRatingCount, css_class: 'graphable' }
                    - { property : unfoldedRatingCount, label: notices.unfoldedRatingCount, css_class: 'graphable' }
                    - { property : clickedRatingCount, label: notices.clickedRatingCount, css_class: 'graphable' }
                    - { property : likedRatingCount, label: notices.likedRatingCount, css_class: 'graphable' }
                    - { property : dislikedRatingCount, label: notices.dislikedRatingCount, css_class: 'graphable' }
                    - { property : dismissedRatingCount, label: notices.dismissedRatingCount, css_class: 'graphable' }
                    - { property: expires, label: notices.expires }
                    - { property: created, label: notices.created }
                    - { property: updated, label: notices.updated }

        ExpiredNotice:
            class: AppBundle\Entity\Notice
            label: menu.expiredNotices
            disabled_actions: ['new']
            search:
                fields:
                    - matchingContexts.exampleUrl
                    - matchingContexts.urlRegex
                    - matchingContexts.excludeUrlRegex
                    - contributor.name
                    - message
                    - note
                    - expires
            list:
                title: title.expiredNotices
                dql_filter: 'entity.expires <= CURRENT_TIMESTAMP()'
                fields:
                    - { property: id, label: notices.id }
                    - { property: contributor, label: notices.contributor }
                    - { property: message, label: notices.message }
                    - { property: visibility, label: notices.visibility }
                    - { property: matchingContexts, label: notices.matchingContexts }
                    - { property: badgedRatingCount, label: notices.badgedRatingCount, css_class: 'graphable' }
                    - { property: displayedRatingCount, label: notices.displayedRatingCount, css_class: 'graphable' }
                    - { property: unfoldedRatingCount, label: notices.unfoldedRatingCount, css_class: 'graphable' }
                    - { property: clickedRatingCount, label: notices.clickedRatingCount, css_class: 'graphable' }
                    - { property: likedRatingCount, label: notices.likedRatingCount, css_class: 'graphable' }
                    - { property: dislikedRatingCount, label: notices.dislikedRatingCount, css_class: 'graphable' }
                    - { property: dismissedRatingCount, label: notices.dismissedRatingCount, css_class: 'graphable' }
                    - { property: expires, label: notices.expires }
                    - { property: unpublishedOnExpiration, label: notices.unpublishedOnExpiration }
            form:
                fields:
                    - { type: group, label: notices.groups.publication, icon: comments }
                    - { property: message, label: notices.message }
                    - { property: contributor, label: notices.contributor, type_options: { 'query_builder': 'AppBundle\Repository\ContributorRepository::getOrderedList' }}
                    - { property: note, label: notices.note }
                    - { property: visibility, label: notices.visibility, type: 'AppBundle\Form\VisibilityType' }
                    - { type: group, label: notices.groups.matchingContexts, icon: 'paper-plane', columns: 6 }
                    - {
                        property: matchingContexts,
                        type: collection,
                        label: notices.matchingContexts,
                        type_options: {
                            required: true,
                            entry_type: 'AppBundle\Form\MatchingContextType',
                            allow_add: true,
                            allow_delete: true,
                            by_reference: false
                        }
                      }
                    - { type: group, label: Cycle de vie, icon: recycle, columns: 6 }
                    - { property: expires, label: notices.expires }
                    - { property: unpublishedOnExpiration, label: notices.unpublishedOnExpiration }


        Contributor:
            label: menu.contributors
            class: AppBundle\Entity\Contributor
            list:
                title: title.contributors
                sort: [name, ASC]
                fields:
                    - { property: id, label: contributors.id }
                    - { property: name, label: contributors.name }
                    - { property: intro, label: contributors.intro }
                    - { property: activeSubscriptionsCount, label: contributors.activeSubscriptionsCount }
                    - { property: enabled, label: contributors.enabled }
            form:
                fields:
                    - { property: name, label: contributors.name }
                    - { property: intro, label: contributors.intro }
                    - { property: imageFile, label: contributors.imageFile, type: vich_image }



        Domain:
            label: menu.domains
            class: AppBundle\Entity\DomainName
            list:
                title: title.domains
                actions: ['show']
                fields:
                    - { property: name, label: domains.name }
                    - { property: sets, label: domains.sets.nb }
                    - { property: matchingContexts, label: domains.matchingContexts.nb }
            form:
                fields:
                    - { property: name, label: domains.name }
            show:
                fields:
                    - { property: id, label: domains.id }
                    - { property: name, label: domains.name }
                    - { property: sets, label: domains.sets }
                    - { property: matchingContexts, label: domains.matchingContexts }
                    - { property: createdAt, label: domains.createdAt }
                    - { property: updatedAt, label: domains.updatedAt }

        DomainsSet:
            label: menu.domainsSets
            class: AppBundle\Entity\DomainsSet
            list:
                title: title.domainsSets
                actions: ['show']
                fields:
                    - { property: name, label: domainsSets.name }
                    - { property: domains, label: domainsSets.domains.nb }
                    - { property: matchingContexts, label: domainsSets.matchingContexts.nb }
            form:
                fields:
                    - { property: name, label: domainsSets.name }
                    - { property: domains, label: domainsSets.domains }
            show:
                fields:
                    - { property: id, label: domainsSets.id }
                    - { property: name, label: domainsSets.name }
                    - { property: domains, label: domainsSets.domains }
                    - { property: matchingContexts, label: domainsSets.matchingContexts }
                    - { property: createdAt, label: domainsSets.createdAt }
                    - { property: updatedAt, label: domainsSets.updatedAt }


        RestrictedContext:
            class: AppBundle\Entity\RestrictedContext
            label: menu.restrictedContexts
            list:
                title: title.restrictedContexts
                fields:
                    - id
                    - { property: urlRegex, label: restrictedContexts.urlRegex }
            form:
                fields:
                    - { property: urlRegex, label: restrictedContexts.urlRegex }

        User:
            label: menu.users
            class: AppBundle\Entity\User
            list:
                title: title.users
                fields:
                    - { property: username, label: users.username }
                    - { property: email, label: users.email }
                    - { property: enabled, label: users.enabled }
                    - { property: lastLogin, label: users.lastLogin }
                    - { property: roles, label: users.roles }
            edit:
                fields:
                    - { property: username, label: users.username }
                    - { property: email, label: users.email }
                    - { property: enabled, label: users.enabled }
                    - { property: plainPassword, label: users.plainPassword, type: text, type_options: { required: false } }
                    - { property: roles, label: users.roles, type: choice, type_options: { multiple: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN' } } }
            new:
                fields:
                    - { property: username, label: users.username }
                    - { property: email, label: users.email }
                    - { property: enabled, label: users.enabled }
                    - { property: plainPassword, label: users.plainPassword, type: text, type_options: { required: true } }
                    - { property: roles, label: users.roles, type: choice, type_options: { multiple: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN' } } }
