easy_admin:
  site_name: '%env(resolve:INSTANCE_NAME)%'
  design:
    assets:
      css:
        - 'css/admin.css'
      js:
        - 'js/regex_validator.js'
        - 'js/chartjs/moment.min.js'
        - 'js/chartjs/Chart.js'
        - 'js/custom_graph.js'
        - 'js/short-and-sweet/short-and-sweet.js'
        - 'js/message_validator.js'
        - 'js/filter_table_row.js'
        - 'js/select2.js'
  entities:
    Notice:
      class: App\Entity\Notice
      label: menu.notices
      actions: ['show']
      list:
        max_results: 50
        title: title.notices
        actions: [ 'show' ]
        fields: &noticeListFields
          - { property: id, label: notices.id, css_class: 'column-id' }
          - { property: contributor, label: notices.contributor, css_class: 'column-contributor' }
          - { property: relayersCount, label: notices.relayers, css_class: 'column-relayers' }
          - { property: message, label: notices.message, css_class: 'column-message' }
          - { property: visibility, label: notices.visibility, css_class: 'column-visibility' }
          - { property: matchingContexts, label: notices.matchingContexts, css_class: 'column-matchingContexts' }
          - { property: badgedRatingCount, label: notices.badgedRatingCount, css_class: 'graphable column-badgedRatingCount' }
          - { property: displayedRatingCount, label: notices.displayedRatingCount, css_class: 'graphable column-displayedRatingCount' }
          - { property: unfoldedRatingCount, label: notices.unfoldedRatingCount, css_class: 'graphable column-unfoldedRatingCount' }
          - { property: clickedRatingCount, label: notices.clickedRatingCount, css_class: 'graphable column-clickedRatingCount' }
          - { property: likedRatingCount, label: notices.likedRatingCount, css_class: 'graphable column-likedRatingCount' }
          - { property: dislikedRatingCount, label: notices.dislikedRatingCount, css_class: 'graphable column-dislikedRatingCount' }
          - { property: dismissedRatingCount, label: notices.dismissedRatingCount, css_class: 'graphable column-dismissedRatingCount' }
          - { property: expires, label: notices.expires, css_class: 'column-expires' }
          - { property: created, label: notices.created, css_class: 'column-created' }
          - { property: updated, label: notices.updated, css_class: 'column-updated' }
      search: &noticeSearch
        fields:
          - id
          - matchingContexts.description
          - matchingContexts.exampleUrl
          - matchingContexts.urlRegex
          - matchingContexts.excludeUrlRegex
          - excludeUrlRegex
          - contributor.name
          - message
          - note
          - expires
      show: &noticeShow
        fields:
          - { property: message, label: notices.message }
          - { property: contributor, label: notices.contributor }
          - { property: relayers, label: notices.relayers }
          - { property: screenshot, template: 'easy_admin/vich_uploader_screenshot.html.twig', label: notices.screenshot }
          - { property: note, label: notices.note }
          - { property: visibility, label: notices.visibility }
          - { property: excludeUrlRegex, label: notices.excludeUrlRegex }
          - { property: matchingContexts, label: notices.matchingContexts }
          - { property: expires, label: notices.expires }
          - { property: unpublishedOnExpiration, label: notices.unpublishedOnExpiration }
      form: &noticeForm
        fields:
          - { type: group, label: notices.groups.publication, icon: comments, columns: 8 }
          - { property: message, label: notices.message }
          - { property: screenshotFile, label: notices.screenshot, type: vich_image, help: notices.screenshot.help }
          - { type: group, label: Lifecycle, icon: recycle, columns: 4 }
          - { property: visibility, label: notices.visibility, type: 'App\Form\VisibilityType' }
          - { property: expires, label: notices.expires }
          - { property: unpublishedOnExpiration, label: notices.unpublishedOnExpiration }
          - { type: group, label: Sources, icon: user-edit, columns: 8 }
          - { property: contributor, label: notices.contributor, type_options: { 'query_builder': 'App\Repository\ContributorRepository::getOrderedList' }}
          - { property: relayers, label: notices.relayers, type: easyadmin_autocomplete, type_options: { class: 'App\Entity\Contributor', multiple: true }}
          - { type: group, label: Privé, icon: lock, columns: 4}
          - { property: note, label: notices.note }
          - { type: group, label: notices.groups.matchingContexts, icon: 'paper-plane', columns: 12 }
          - { property: matchingContexts, type: collection, label: notices.matchingContexts, type_options: { required: true, entry_type: 'App\Form\MatchingContextType', allow_add: true, allow_delete: true, by_reference: false }}
          - { property: excludeUrlRegex, label: notices.excludeUrlRegex, type: textarea }

    ExpiredNotice:
      class: App\Entity\Notice
      label: menu.expiredNotices
      disabled_actions: ['new']
      search: *noticeSearch
      list:
        max_results: 50
        title: title.expiredNotices
        dql_filter: 'entity.expires <= CURRENT_TIMESTAMP()'
        fields: *noticeListFields
      form: *noticeForm

    Contributor:
      label: menu.contributors
      class: App\Entity\Contributor
      list:
        title: title.contributors
        sort: [name, ASC]
        max_results: 50
        fields:
          - { property: id, label: contributors.id }
          - { property: image, template: 'easy_admin/vich_uploader_image.html.twig', label: contributors.image }
          - { property: name, label: contributors.name }
          - { property: email, label: contributors.email }
          - { property: intro, label: contributors.intro }
          - { property: activeSubscriptionsCount, label: contributors.activeSubscriptionsCount }
          - { property: enabled, label: contributors.enabled }
          - { property: pinnedNotice, type: object, template: 'easy_admin/notice_in_list.html.twig', label: contributors.pinnedNotice }
      form:
        fields:
          - { type: group, label: 'Identité', icon: 'paper-plane', columns: 6 }
          - { property: name, label: contributors.name, type_options: { required: true } }
          - { property: email, label: contributors.email }
          - { property: website, label: contributors.website }
          - { property: categories, label: contributors.categories, type: 'App\Form\CategoryNameType' }
          - { type: group, label: 'profil', icon: 'paper-plane', columns: 6 }
          - { property: intro, label: contributors.intro, type: textarea }
          - { property: pinnedNotices, label: contributors.pinnedNotices, type: 'App\Form\PinnedNoticesType', type_options: { class: App\Entity\Notice, multiple: true,  label_attr: { class: 'col-lg-3' }, attr: { class: 'col-lg-9' }  } }
          - { type: group, label: 'Médias', icon: 'paper-plane', columns: 6 }
          - { property: imageFile, label: contributors.imageFile, type: vich_image, help: contributors.imageFile.help }
          - { property: bannerImageFile, label: contributors.bannerImageFile, type: vich_image, help: contributors.bannerImageFile.help }
          - { type: group, label: contributors.groups.social_media, icon: 'paper-plane', columns: 6 }
          - { property: title, label: contributors.title, help: "Ce titre remplace le nom du contributor lors d'un partage." }
          - { property: previewImageFile, label: contributors.previewImageFile, type: vich_image, help: '1200x630 pixels, JPG, PNG.' }

    Domain:
      label: menu.domains
      class: App\Entity\DomainName
      list:
        title: title.domains
        actions: ['show']
        sort: ['name', 'ASC']
        max_results: 50
        fields:
          - { property: prettyName, label: domains.name }
          - { property: sets, label: domains.sets.nb }
          - { property: matchingContexts, label: domains.matchingContexts.nb }
      form:
        fields:
          - { property: name, label: domains.name }
          - { property: path, label: domains.path }
      show:
        max_results: 100
        fields:
          - { property: id, label: domains.id }
          - { property: prettyName, label: domains.name }
          - { property: sets, label: domains.sets }
          # ugly but https://github.com/EasyCorp/EasyAdminBundle/issues/1108
          - property: notices,
            label: domains.notices,
            template: 'easy_admin/_field_notices.html.twig'
          - { property: createdAt, label: domains.createdAt }
          - { property: updatedAt, label: domains.updatedAt }

    DomainsSet:
      label: menu.domainsSets
      class: App\Entity\DomainsSet
      list:
        title: title.domainsSets
        actions: ['show']
        sort: ['name', 'ASC']
        max_results: 50
        fields:
          - { property: name, label: domainsSets.name }
          - { property: domains, label: domainsSets.domains.nb }
          - { property: matchingContexts, label: domainsSets.matchingContexts.nb }
      form:
        fields:
          - { property: name, label: domainsSets.name }
          - { property: domains, label: domainsSets.domains, type: easyadmin_autocomplete }
      show:
        max_results: 100
        fields:
          - { property: id, label: domainsSets.id }
          - { property: name, label: domainsSets.name }
          - { property: domains, label: domainsSets.domains }
          # ugly but https://github.com/EasyCorp/EasyAdminBundle/issues/1108
          - property: notices,
            label: domainsSets.notices,
            template: 'easy_admin/_field_notices.html.twig'
          - { property: createdAt, label: domainsSets.createdAt }
          - { property: updatedAt, label: domainsSets.updatedAt }


    RestrictedContext:
      class: App\Entity\RestrictedContext
      label: menu.restrictedContexts
      list:
        title: title.restrictedContexts
        max_results: 50
        fields:
          - id
          - { property: urlRegex, label: restrictedContexts.urlRegex }
      form:
        fields:
          - { property: urlRegex, label: restrictedContexts.urlRegex }

    User:
      label: menu.users
      class: App\Entity\User
      list:
        title: title.users
        max_results: 50
        fields:
          - { property: username, label: users.username }
          - { property: email, label: users.email }
          - { property: enabled, label: users.enabled }
          - { property: lastLogin, label: users.lastLogin }
          - { property: roles, label: users.roles }
      edit:
        fields:
          - { property: username, label: users.username }
          - { property: email, label: users.email }
          - { property: enabled, label: users.enabled }
          - { property: plainPassword, label: users.plainPassword, type: text, type_options: { required: false } }
          - { property: roles, label: users.roles, type: choice, type_options: { multiple: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN' } } }
      new:
        fields:
          - { property: username, label: users.username }
          - { property: email, label: users.email }
          - { property: enabled, label: users.enabled }
          - { property: plainPassword, label: users.plainPassword, type: text, type_options: { required: true } }
          - { property: roles, label: users.roles, type: choice, type_options: { multiple: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN' } } }
