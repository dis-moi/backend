security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api_v4:
            pattern: ^/v4
            stateless: true
            anonymous: true
            provider: fos_userbundle
            http_basic:
                realm: "Authentication Desk"
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
            json_login:
                check_path: /v4/_jwt
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager

            logout:                 true
            logout_on_user_change:  true
            anonymous:              true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: '%env(REQUIRES_CHANNEL)%' }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: '%env(REQUIRES_CHANNEL)%' }
        - { path: ^/admin/, role: ROLE_USER, requires_channel: '%env(REQUIRES_CHANNEL)%' }
        - { path: ^/api/.+/admin, role: ROLE_ADMIN, requires_channel: '%env(REQUIRES_CHANNEL)%' }
