# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    openapi_documentation_extra:
        servers:
            - url: https://dismoi.fr
              description: Server of Dismoi

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # Add tags to services implementing a specific interface
    _instanceof:
        App\OpenApi\DocumenterInterface:
            tags: ['openapi_documenter']

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Domain\Service\MessagePresenter:
        arguments:
            $utmMedium: 'Dismoi_extension_navigateur'

    App\Domain\Service\NoticeAssembler:
        arguments:
            $contributorRepository: '@App\Repository\ContributorRepository'
            $domainNameRepository: '@App\Repository\DomainNameRepository'

    App\Domain\Service\EmailComposer:
        arguments:
            $router: '@router'
            $instanceName: '%env(resolve:INSTANCE_NAME)%'
            $instanceEmail: '%env(resolve:INSTANCE_EMAIL)%'

    # Decorate the docs normalizer to add our custom doc tidbits
#    App\Swagger\SwaggerDecorator:
#        decorates: 'api_platform.swagger.normalizer.documentation'
#        arguments:
#            - '@App\Swagger\SwaggerDecorator.inner'
#            - !tagged 'oas_documenter'
#            - '%api_documentation_extras_oas_v2%'
#            - '%api_documentation_extras_oas_v3%'
#        autoconfigure: false

    App\OpenApi\OpenApiFactory:
        decorates: 'api_platform.openapi.factory'
        arguments:
            $factory: '@App\OpenApi\OpenApiFactory.inner'
            $documenters: !tagged 'openapi_documenter'
            $extra: '%openapi_documentation_extra%'



    App\Command\UpdateCaptainFactNoticesCommand:
        $contributorId: '%env(int:DISMOI_CAPTAINFACT_CONTRIBUTOR_ID)%'

